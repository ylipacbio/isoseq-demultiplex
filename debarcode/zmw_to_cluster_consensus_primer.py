#!/usr/bin/env python
import sys
import os
import os.path as op
from argparse import ArgumentParser
from .utils import *
from .cluster_to_consensus_primer import ClusterDict

def z2cp(flnc_z2c, c2cp):
    pass


def get_c2cp_from_cluster_dict_reader(cluster_dict_reader, min_fraction):
    """
    ...doctest:
        >>> s = 'cid\\t[movie1/1,movie1/2]\\t[movie2/3,movie3/4]\\t[0,0]\\t[1,None]\\t0'
        >>> dict(get_c2cp_from_cluster_dict_reader([s], 0.6))
        {'cid': 0}
    """
    c2cp = defaultdict(lambda: None)
    for s in cluster_dict_reader:
        obj = ClusterDict.fromString(s, min_fraction)
        c2cp[obj.cid] = obj.consensus_primer
    return c2cp


def get_c2cp_from_cluster_dict_fn(cluster_dict_fn, min_fraction):
    return get_c2cp_from_cluster_dict_reader(open(cluster_dict_fn, 'r'), min_fraction)


def get_parser():
    """return arg parser"""
    desc = """Link zmw to consensus primers of its associated clusters."""
    parser = ArgumentParser(description=desc)
    #parser.add_argument("flnc_fa_fn", help="Input FLNC FASTA, e.g., %s" % FLNC_FA_FN)
    parser.add_argument("flnc_z2c_fn", help="Input FLNC zmws to cluster csv, i.e., flnc_z2c.csv generated by cluster-to-consensus-primer")
    parser.add_argument("nfl_z2c_fn", help="Input NFL zmws to cluster csv, i.e., nfl_z2c.csv generated by cluster-to-consensus-primer")
    parser.add_argument("cluster_dict_fn", help="Input cluster to consensus primer csv, i.e., cluster_dict.csv generated by cluster-to-consensus-primer")
    parser.add_argument("out_dir", help="Output directory")
    parser.add_argument("--min_fraction", help="Minimum fraction of consensus primer among all known primers.", default=0.6, type=float)
    return parser

def run(args):
    flnc_z2c_fn = 'flnc_z2c.csv'
    nfl_z2c_fn = 'nfl_z2c.csv'
    #cluster_dict_fn = 'cluster_dict.csv'
    get_c2cp_from_cluster_dict_fn(args.cluster_dict_fn, args.min_fraction)


def main():
    """main"""
    sys.exit(run(get_parser().parse_args(sys.argv[1:])))

if __name__ == "__main__":
    main()
